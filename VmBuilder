        public class VmBuilder
    {
        private readonly int memSize;
        private Func<int> read;
        private Action<char> write;
        private static bool needLoopCommands;
        private static bool needBasicCommands;

        public VmBuilder(int memSize)
        {
            this.memSize = memSize;
        }

        public VmBuilder AddBasicCommands(Func<int> read, Action<char> write)
        {
            this.read = read;
            this.write = write;
            needBasicCommands = true;
            return this;
        }

        public VmBuilder AddLoopCommands()
        {
            needLoopCommands = true;
            return this;
        }

        public VirtualMachine Build(string program)
        {
            var vm = new VirtualMachine(program, memSize);
            if (needBasicCommands)
                BrainfuckBasicCommands.RegisterTo(vm, read, write);
            
            if (needLoopCommands)
                BrainfuckLoopCommands.RegisterTo(vm);
            
            return vm;
        }
    }
